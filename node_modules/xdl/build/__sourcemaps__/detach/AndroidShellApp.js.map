{"version":3,"sources":["detach/AndroidShellApp.js"],"names":["async","androidSrcPath","shellPath","isDetached","await","spawnAsync","pipeToLogger","loggerFields","buildPhase","cwd","path","join","env","process","JSON_LOGS","initialCopyLogger","logger","withFields","copyToShellApp","fileName","fs","copy","e","warn","copyInitialShellAppFilesAsync","context","fnLogger","let","shellPathForContext","url","published","manifest","config","releaseChannel","data","privateConfig","fullManifestUrl","replace","versionCode","javaPackage","android","package","Error","name","scheme","detach","bundleUrl","isFullManifest","version","backgroundImages","backgroundImagesForApp","splashBackgroundColor","getSplashScreenBackgroundColor","updatesDisabled","updates","enabled","remove","appBuildGradle","regexFileAsync","writeFile","runShPath","buildGradleFile","readFileSync","androidVersion","match","deleteLinesInFileAsync","shouldShowLoadingView","xmlWeirdAndroidEscape","randomID","uuid","v4","newScheme","newSchemeSuffix","intentFilters","_","get","renderIntentFilters","searchLine","permissions","content","map","p","whitelist","forEach","s","includes","push","identifier","split","pop","blacklist","filter","writeFileSync","JSON","stringify","saveUrlToPathAsync","createAndWriteIconsToPathAsync","length","globby","absolute","filePath","removeSync","image","AssetBundle","bundleAsync","bundledAssets","certificateHash","googleAndroidApiKey","branch","fabric","googleMaps","googleSignIn","apiKey","buildSecret","googleServicesFile","googleServicesFileContents","readFile","resolve","runShellAppModificationsAsync","build","androidBuildConfiguration","gradleArgs","GRADLE_DAEMON_DISABLED","unshift","spawnAsyncThrowError","keystorePassword","keyPassword","keystore","keyAlias","outputFile","buildShellAppAsync","addDetachedConfigToExp","getManifestAsync","imageKeys","exponentDirectory","workingDir","EXPO_UNIVERSE_DIR","original","noAmps","replaceString","noLt","noGt","noApos","exports","updateAndroidShellAppAsync","args","sdkVersion","Accept","getRemoteOrLocalUrl","key","basePath","splash","reduce","acc","imageKey","backgroundColor","resizeMode","createAndroidShellAppAsync","privateConfigFile","configuration","alias","exponentDir","ensureDir","info","privateConfigContents","parse","buildFlags","StandaloneBuildFlags","createAndroid","StandaloneContext","createServiceContext","skipBuild","type","projectPath","expoSourcePath","exp","console","assetsDirectory","publishBundlePath","relative","publishManifestPath"],"mappings":"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","file":"../../detach/AndroidShellApp.js","sourcesContent":["// Copyright 2015-present 650 Industries. All rights reserved.\n/**\n * @flow\n */\n\n'use strict';\n\nimport fs from 'fs-extra';\nimport path from 'path';\nimport replaceString from 'replace-string';\nimport _ from 'lodash';\nimport globby from 'globby';\nimport uuid from 'uuid';\n\nimport { createAndWriteIconsToPathAsync } from './AndroidIcons';\nimport * as AssetBundle from './AssetBundle';\nimport * as ExponentTools from './ExponentTools';\nimport StandaloneBuildFlags from './StandaloneBuildFlags';\nimport StandaloneContext from './StandaloneContext';\nimport renderIntentFilters from './AndroidIntentFilters';\nimport logger from './Logger';\n\nconst {\n  getManifestAsync,\n  saveUrlToPathAsync,\n  spawnAsyncThrowError,\n  spawnAsync,\n  regexFileAsync,\n  deleteLinesInFileAsync,\n} = ExponentTools;\n\nconst imageKeys = ['mdpi', 'hdpi', 'xhdpi', 'xxhdpi', 'xxxhdpi'];\n\n// Do not call this from anything used by detach\nfunction exponentDirectory(workingDir) {\n  if (workingDir) {\n    return workingDir;\n  } else if (process.env.EXPO_UNIVERSE_DIR) {\n    return path.join(process.env.EXPO_UNIVERSE_DIR, 'exponent');\n  } else {\n    return null;\n  }\n}\n\nfunction xmlWeirdAndroidEscape(original) {\n  let noAmps = replaceString(original, '&', '&amp;');\n  let noLt = replaceString(noAmps, '<', '&lt;');\n  let noGt = replaceString(noLt, '>', '&gt;');\n  let noApos = replaceString(noGt, '\"', '\\\\\"');\n  return replaceString(noApos, \"'\", \"\\\\'\");\n}\n\nexports.updateAndroidShellAppAsync = async function updateAndroidShellAppAsync(args: any) {\n  let { url, sdkVersion, releaseChannel, workingDir } = args;\n\n  releaseChannel = releaseChannel ? releaseChannel : 'default';\n  let manifest = await getManifestAsync(url, {\n    'Exponent-SDK-Version': sdkVersion,\n    'Exponent-Platform': 'android',\n    'Expo-Release-Channel': releaseChannel,\n    Accept: 'application/expo+json,application/json',\n  });\n\n  let fullManifestUrl = url.replace('exp://', 'https://');\n  let bundleUrl = manifest.bundleUrl;\n\n  let shellPath = path.join(exponentDirectory(workingDir), 'android-shell-app');\n\n  await fs.remove(path.join(shellPath, 'app', 'src', 'main', 'assets', 'shell-app-manifest.json'));\n  await fs.writeFileSync(\n    path.join(shellPath, 'app', 'src', 'main', 'assets', 'shell-app-manifest.json'),\n    JSON.stringify(manifest)\n  );\n  await fs.remove(path.join(shellPath, 'app', 'src', 'main', 'assets', 'shell-app.bundle'));\n  await saveUrlToPathAsync(\n    bundleUrl,\n    path.join(shellPath, 'app', 'src', 'main', 'assets', 'shell-app.bundle')\n  );\n\n  await deleteLinesInFileAsync(\n    `START\\ EMBEDDED\\ RESPONSES`,\n    `END\\ EMBEDDED\\ RESPONSES`,\n    path.join(\n      shellPath,\n      'app',\n      'src',\n      'main',\n      'java',\n      'host',\n      'exp',\n      'exponent',\n      'generated',\n      'AppConstants.java'\n    )\n  );\n\n  await regexFileAsync(\n    '// ADD EMBEDDED RESPONSES HERE',\n    `\n    // ADD EMBEDDED RESPONSES HERE\n    // START EMBEDDED RESPONSES\n    embeddedResponses.add(new Constants.EmbeddedResponse(\"${fullManifestUrl}\", \"assets://shell-app-manifest.json\", \"application/json\"));\n    embeddedResponses.add(new Constants.EmbeddedResponse(\"${bundleUrl}\", \"assets://shell-app.bundle\", \"application/javascript\"));\n    // END EMBEDDED RESPONSES`,\n    path.join(\n      shellPath,\n      'app',\n      'src',\n      'main',\n      'java',\n      'host',\n      'exp',\n      'exponent',\n      'generated',\n      'AppConstants.java'\n    )\n  );\n\n  await regexFileAsync(\n    'RELEASE_CHANNEL = \"default\"',\n    `RELEASE_CHANNEL = \"${releaseChannel}\"`,\n    path.join(\n      shellPath,\n      'app',\n      'src',\n      'main',\n      'java',\n      'host',\n      'exp',\n      'exponent',\n      'generated',\n      'AppConstants.java'\n    )\n  );\n};\n\nfunction getRemoteOrLocalUrl(manifest, key, isDetached) {\n  // in detached apps, `manifest` is actually just app.json, so there are no remote url fields\n  // we should return a local url starting with file:// instead\n  if (isDetached) {\n    return _.get(manifest, key);\n  }\n  return _.get(manifest, `${key}Url`);\n}\n\nfunction backgroundImagesForApp(shellPath, manifest, isDetached) {\n  // returns an array like:\n  // [\n  //   {url: 'urlToDownload', path: 'pathToSaveTo'},\n  //   {url: 'anotherURlToDownload', path: 'anotherPathToSaveTo'},\n  // ]\n  let basePath = path.join(shellPath, 'app', 'src', 'main', 'res');\n  if (_.get(manifest, 'android.splash')) {\n    var splash = _.get(manifest, 'android.splash');\n    return _.reduce(\n      imageKeys,\n      function(acc, imageKey) {\n        let url = getRemoteOrLocalUrl(splash, imageKey, isDetached);\n        if (url) {\n          acc.push({\n            url,\n            path: path.join(basePath, `drawable-${imageKey}`, 'shell_launch_background_image.png'),\n          });\n        }\n\n        return acc;\n      },\n      []\n    );\n  }\n\n  let url = getRemoteOrLocalUrl(manifest, 'splash.image', isDetached);\n  if (url) {\n    return [\n      {\n        url,\n        path: path.join(basePath, 'drawable-xxxhdpi', 'shell_launch_background_image.png'),\n      },\n    ];\n  }\n\n  return [];\n}\n\nfunction getSplashScreenBackgroundColor(manifest) {\n  let backgroundColor;\n  if (manifest.android && manifest.android.splash && manifest.android.splash.backgroundColor) {\n    backgroundColor = manifest.android.splash.backgroundColor;\n  } else if (manifest.splash && manifest.splash.backgroundColor) {\n    backgroundColor = manifest.splash.backgroundColor;\n  }\n\n  // Default to white\n  if (!backgroundColor) {\n    backgroundColor = '#FFFFFF';\n  }\n  return backgroundColor;\n}\n\n/*\n  if resizeMode is 'cover' we should show LoadingView:\n  using an ImageView, unlike having a BitmapDrawable\n  provides a fullscreen image without distortions\n*/\nfunction shouldShowLoadingView(manifest) {\n  return (\n    (manifest.android &&\n      manifest.android.splash &&\n      manifest.android.splash.resizeMode &&\n      manifest.android.splash.resizeMode === 'cover') ||\n    (manifest.splash && manifest.splash.resizeMode && manifest.splash.resizeMode === 'cover')\n  );\n}\n\nexport async function copyInitialShellAppFilesAsync(\n  androidSrcPath,\n  shellPath,\n  isDetached: boolean = false\n) {\n  if (androidSrcPath) {\n    await spawnAsync(`../../tools-public/generate-dynamic-macros-android.sh`, [], {\n      pipeToLogger: true,\n      loggerFields: { buildPhase: 'generating dynamic macros' },\n      cwd: path.join(androidSrcPath, 'app'),\n      env: {\n        ...process.env,\n        JSON_LOGS: '0',\n      },\n    }); // populate android template files now since we take out the prebuild step later on\n  }\n\n  const initialCopyLogger = logger.withFields({ buildPhase: 'copying initial shell app files' });\n\n  const copyToShellApp = async fileName => {\n    try {\n      await fs.copy(path.join(androidSrcPath, fileName), path.join(shellPath, fileName));\n    } catch (e) {\n      // android.iml is only available locally, not on the builders, so don't crash when this happens\n      initialCopyLogger.warn(`Warning: Could not copy ${fileName} to shell app directory.`);\n    }\n  };\n\n  if (!isDetached) {\n    await copyToShellApp('expoview');\n    await copyToShellApp('ReactCommon');\n    await copyToShellApp('ReactAndroid');\n  }\n\n  await copyToShellApp('android.iml');\n  await copyToShellApp('app');\n  await copyToShellApp('build.gradle');\n  await copyToShellApp('gradle');\n  await copyToShellApp('gradle.properties');\n  await copyToShellApp('gradlew');\n  await copyToShellApp('settings.gradle');\n  await copyToShellApp('debug.keystore');\n  await copyToShellApp('run.sh');\n  await copyToShellApp('maven'); // this is a symlink\n}\n\nexports.createAndroidShellAppAsync = async function createAndroidShellAppAsync(args: any) {\n  let {\n    url,\n    sdkVersion,\n    releaseChannel,\n    privateConfigFile,\n    configuration,\n    keystore,\n    alias,\n    keystorePassword,\n    keyPassword,\n    outputFile,\n    workingDir,\n  } = args;\n\n  const exponentDir = exponentDirectory(workingDir);\n  let androidSrcPath = path.join(exponentDir, 'android');\n  let shellPath = path.join(exponentDir, 'android-shell-app');\n\n  await fs.remove(shellPath);\n  await fs.ensureDir(shellPath);\n\n  releaseChannel = releaseChannel ? releaseChannel : 'default';\n  let manifest;\n  if (args.manifest) {\n    manifest = args.manifest;\n    logger\n      .withFields({ buildPhase: 'reading manifest' })\n      .info('Using manifest:', JSON.stringify(manifest));\n  } else {\n    manifest = await getManifestAsync(url, {\n      'Exponent-SDK-Version': sdkVersion,\n      'Exponent-Platform': 'android',\n      'Expo-Release-Channel': releaseChannel,\n      Accept: 'application/expo+json,application/json',\n    });\n  }\n\n  configuration = configuration ? configuration : 'Release';\n\n  let privateConfig;\n  if (privateConfigFile) {\n    let privateConfigContents = await fs.readFile(privateConfigFile, 'utf8');\n    privateConfig = JSON.parse(privateConfigContents);\n  } else if (manifest.android) {\n    privateConfig = manifest.android.config;\n  }\n\n  let androidBuildConfiguration;\n  if (keystore && alias && keystorePassword && keyPassword) {\n    androidBuildConfiguration = {\n      keystore,\n      keystorePassword,\n      keyAlias: alias,\n      keyPassword,\n      outputFile,\n    };\n  }\n\n  let buildFlags = StandaloneBuildFlags.createAndroid(configuration, androidBuildConfiguration);\n  let context = StandaloneContext.createServiceContext(\n    androidSrcPath,\n    null,\n    manifest,\n    privateConfig,\n    /* testEnvironment */ 'none',\n    buildFlags,\n    url,\n    releaseChannel\n  );\n\n  await copyInitialShellAppFilesAsync(androidSrcPath, shellPath);\n  await runShellAppModificationsAsync(context);\n\n  if (!args.skipBuild) {\n    await buildShellAppAsync(context);\n  }\n};\n\nfunction shellPathForContext(context: StandaloneContext) {\n  if (context.type === 'user') {\n    return path.join(context.data.projectPath, 'android');\n  } else {\n    return path.join(\n      exponentDirectory(\n        context.data.expoSourcePath && path.join(context.data.expoSourcePath, '..')\n      ),\n      'android-shell-app'\n    );\n  }\n}\n\nexport async function runShellAppModificationsAsync(\n  context: StandaloneContext,\n  isDetached: boolean = false\n) {\n  const fnLogger = logger.withFields({ buildPhase: 'running shell app modifications' });\n\n  let shellPath = shellPathForContext(context);\n  let url: string = context.published.url;\n  let manifest = context.config; // manifest or app.json\n  let releaseChannel = context.published.releaseChannel;\n\n  if (!context.data.privateConfig) {\n    fnLogger.warn('Warning: No config file specified.');\n  }\n\n  let fullManifestUrl = url.replace('exp://', 'https://');\n\n  let versionCode = 1;\n  let javaPackage = manifest.android.package;\n  if (manifest.android.versionCode) {\n    versionCode = manifest.android.versionCode;\n  }\n\n  if (!javaPackage) {\n    throw new Error(\n      'Must specify androidPackage option (either from manifest or on command line).'\n    );\n  }\n\n  let name = manifest.name;\n  let scheme = manifest.scheme || (manifest.detach && manifest.detach.scheme);\n  let bundleUrl: ?string = manifest.bundleUrl;\n  let isFullManifest = !!bundleUrl;\n  let version = manifest.version ? manifest.version : '0.0.0';\n  let backgroundImages = backgroundImagesForApp(shellPath, manifest, isDetached);\n  let splashBackgroundColor = getSplashScreenBackgroundColor(manifest);\n  let updatesDisabled = manifest.updates && manifest.updates.enabled === false;\n\n  // Clean build directories\n  await fs.remove(path.join(shellPath, 'app', 'build'));\n  await fs.remove(path.join(shellPath, 'ReactAndroid', 'build'));\n  await fs.remove(path.join(shellPath, 'expoview', 'build'));\n  await fs.remove(path.join(shellPath, 'app', 'src', 'test'));\n  await fs.remove(path.join(shellPath, 'app', 'src', 'androidTest'));\n\n  if (isDetached) {\n    let appBuildGradle = path.join(shellPath, 'app', 'build.gradle');\n    await regexFileAsync(/\\/\\* UNCOMMENT WHEN DISTRIBUTING/g, '', appBuildGradle);\n    await regexFileAsync(/END UNCOMMENT WHEN DISTRIBUTING \\*\\//g, '', appBuildGradle);\n    await regexFileAsync(\n      /\\/\\/ WHEN_DISTRIBUTING_REMOVE_FROM_HERE/g,\n      '/* REMOVED_WHEN_DISTRIBUTING_FROM_HERE',\n      appBuildGradle\n    );\n    await regexFileAsync(\n      /\\/\\/ WHEN_DISTRIBUTING_REMOVE_TO_HERE/g,\n      'REMOVED_WHEN_DISTRIBUTING_TO_HERE */',\n      appBuildGradle\n    );\n\n    // Don't need to compile expoview or ReactAndroid\n    // react-native link looks for a \\n so we need that. See https://github.com/facebook/react-native/blob/master/local-cli/link/android/patches/makeSettingsPatch.js\n    await fs.writeFile(path.join(shellPath, 'settings.gradle'), `include ':app'\\n`);\n\n    await regexFileAsync(\n      'TEMPLATE_INITIAL_URL',\n      url,\n      path.join(\n        shellPath,\n        'app',\n        'src',\n        'main',\n        'java',\n        'host',\n        'exp',\n        'exponent',\n        'MainActivity.java'\n      )\n    );\n\n    const runShPath = path.join(shellPath, 'run.sh');\n    await regexFileAsync('host.exp.exponent/', `${javaPackage}/`, runShPath);\n    await regexFileAsync('LauncherActivity', 'MainActivity', runShPath);\n  }\n\n  // Package\n  await regexFileAsync(\n    `applicationId 'host.exp.exponent'`,\n    `applicationId '${javaPackage}'`,\n    path.join(shellPath, 'app', 'build.gradle')\n  );\n  await regexFileAsync(\n    `android:name=\"host.exp.exponent\"`,\n    `android:name=\"${javaPackage}\"`,\n    path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n  );\n\n  // Versions\n  let buildGradleFile = await fs.readFileSync(path.join(shellPath, 'app', 'build.gradle'), 'utf8');\n  let androidVersion = buildGradleFile.match(/versionName '(\\S+)'/)[1];\n  await regexFileAsync(\n    'VERSION_NAME = null',\n    `VERSION_NAME = \"${androidVersion}\"`,\n    path.join(\n      shellPath,\n      'app',\n      'src',\n      'main',\n      'java',\n      'host',\n      'exp',\n      'exponent',\n      'generated',\n      'AppConstants.java'\n    )\n  );\n  await deleteLinesInFileAsync(\n    `BEGIN\\ VERSIONS`,\n    `END\\ VERSIONS`,\n    path.join(shellPath, 'app', 'build.gradle')\n  );\n  await regexFileAsync(\n    '// ADD VERSIONS HERE',\n    `versionCode ${versionCode}\n    versionName '${version}'`,\n    path.join(shellPath, 'app', 'build.gradle')\n  );\n\n  // Remove Exponent build script\n  if (!isDetached) {\n    await regexFileAsync(\n      `preBuild.dependsOn generateDynamicMacros`,\n      ``,\n      path.join(shellPath, 'expoview', 'build.gradle')\n    );\n  }\n\n  // change javaMaxHeapSize\n  await regexFileAsync(\n    `javaMaxHeapSize \"8g\"`,\n    `javaMaxHeapSize \"6g\"`,\n    path.join(shellPath, 'app', 'build.gradle')\n  );\n\n  // Push notifications\n  await regexFileAsync(\n    '\"package_name\": \"host.exp.exponent\"',\n    `\"package_name\": \"${javaPackage}\"`,\n    path.join(shellPath, 'app', 'google-services.json')\n  ); // TODO: actually use the correct file\n\n  // TODO: probably don't need this in both places\n  await regexFileAsync(\n    /host\\.exp\\.exponent\\.permission\\.C2D_MESSAGE/g,\n    `${javaPackage}.permission.C2D_MESSAGE`,\n    path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n  );\n  if (!isDetached) {\n    await regexFileAsync(\n      /host\\.exp\\.exponent\\.permission\\.C2D_MESSAGE/g,\n      `${javaPackage}.permission.C2D_MESSAGE`,\n      path.join(shellPath, 'expoview', 'src', 'main', 'AndroidManifest.xml')\n    );\n  }\n\n  // Set INITIAL_URL, SHELL_APP_SCHEME and SHOW_LOADING_VIEW\n  await regexFileAsync(\n    'INITIAL_URL = null',\n    `INITIAL_URL = \"${url}\"`,\n    path.join(\n      shellPath,\n      'app',\n      'src',\n      'main',\n      'java',\n      'host',\n      'exp',\n      'exponent',\n      'generated',\n      'AppConstants.java'\n    )\n  );\n  if (scheme) {\n    await regexFileAsync(\n      'SHELL_APP_SCHEME = null',\n      `SHELL_APP_SCHEME = \"${scheme}\"`,\n      path.join(\n        shellPath,\n        'app',\n        'src',\n        'main',\n        'java',\n        'host',\n        'exp',\n        'exponent',\n        'generated',\n        'AppConstants.java'\n      )\n    );\n  }\n  if (shouldShowLoadingView(manifest)) {\n    await regexFileAsync(\n      'SHOW_LOADING_VIEW_IN_SHELL_APP = false',\n      'SHOW_LOADING_VIEW_IN_SHELL_APP = true',\n      path.join(\n        shellPath,\n        'app',\n        'src',\n        'main',\n        'java',\n        'host',\n        'exp',\n        'exponent',\n        'generated',\n        'AppConstants.java'\n      )\n    );\n  }\n  if (isDetached) {\n    await regexFileAsync(\n      'IS_DETACHED = false',\n      `IS_DETACHED = true`,\n      path.join(\n        shellPath,\n        'app',\n        'src',\n        'main',\n        'java',\n        'host',\n        'exp',\n        'exponent',\n        'generated',\n        'AppConstants.java'\n      )\n    );\n  }\n  if (updatesDisabled) {\n    await regexFileAsync(\n      'ARE_REMOTE_UPDATES_ENABLED = true',\n      'ARE_REMOTE_UPDATES_ENABLED = false',\n      path.join(\n        shellPath,\n        'app',\n        'src',\n        'main',\n        'java',\n        'host',\n        'exp',\n        'exponent',\n        'generated',\n        'AppConstants.java'\n      )\n    );\n  }\n\n  // App name\n  await regexFileAsync(\n    '\"app_name\">Expo',\n    `\"app_name\">${xmlWeirdAndroidEscape(name)}`,\n    path.join(shellPath, 'app', 'src', 'main', 'res', 'values', 'strings.xml')\n  );\n\n  // Splash Screen background color\n  await regexFileAsync(\n    '\"splashBackground\">#FFFFFF',\n    `\"splashBackground\">${splashBackgroundColor}`,\n    path.join(shellPath, 'app', 'src', 'main', 'res', 'values', 'colors.xml')\n  );\n\n  // show only background color if LoadingView will appear\n  if (shouldShowLoadingView(manifest)) {\n    await regexFileAsync(\n      /<item>.*<\\/item>/,\n      '',\n      path.join(shellPath, 'app', 'src', 'main', 'res', 'drawable', 'splash_background.xml')\n    );\n  }\n\n  // Change stripe schemes and add meta-data\n  const randomID = uuid.v4();\n  const newScheme = `<meta-data android:name=\"standaloneStripeScheme\" android:value=\"${randomID}\" />`;\n  await regexFileAsync(\n    '<!-- ADD HERE STRIPE SCHEME META DATA -->',\n    newScheme,\n    path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n  );\n\n  const newSchemeSuffix = `expo.modules.payments.stripe.${randomID}\" />`;\n  await regexFileAsync(\n    'expo.modules.payments.stripe\" />',\n    newSchemeSuffix,\n    path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n  );\n\n  // Remove exp:// scheme from LauncherActivity\n  await deleteLinesInFileAsync(\n    `START\\ LAUNCHER\\ INTENT\\ FILTERS`,\n    `END\\ LAUNCHER\\ INTENT\\ FILTERS`,\n    path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n  );\n\n  // Remove LAUNCHER category from HomeActivity\n  await deleteLinesInFileAsync(\n    `START\\ HOME\\ INTENT\\ FILTERS`,\n    `END\\ HOME\\ INTENT\\ FILTERS`,\n    path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n  );\n\n  if (isDetached) {\n    // Add LAUNCHER category to MainActivity\n    await regexFileAsync(\n      '<!-- ADD DETACH INTENT FILTERS HERE -->',\n      `<intent-filter>\n        <action android:name=\"android.intent.action.MAIN\"/>\n\n        <category android:name=\"android.intent.category.LAUNCHER\"/>\n      </intent-filter>`,\n      path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n    );\n  } else {\n    // Add LAUNCHER category to ShellAppActivity\n    await regexFileAsync(\n      '<!-- ADD SHELL INTENT FILTERS HERE -->',\n      `<intent-filter>\n        <action android:name=\"android.intent.action.MAIN\"/>\n\n        <category android:name=\"android.intent.category.LAUNCHER\"/>\n      </intent-filter>`,\n      path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n    );\n  }\n\n  // Add app-specific intent filters\n  const intentFilters = _.get(manifest, 'android.intentFilters');\n  if (intentFilters) {\n    if (isDetached) {\n      await regexFileAsync(\n        '<!-- ADD DETACH APP SPECIFIC INTENT FILTERS -->',\n        renderIntentFilters(intentFilters).join('\\n'),\n        path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n      );\n    } else {\n      await regexFileAsync(\n        '<!-- ADD SHELL APP SPECIFIC INTENT FILTERS -->',\n        renderIntentFilters(intentFilters).join('\\n'),\n        path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n      );\n    }\n  }\n\n  // Add shell app scheme\n  if (scheme) {\n    const searchLine = isDetached\n      ? '<!-- ADD DETACH SCHEME HERE -->'\n      : '<!-- ADD SHELL SCHEME HERE -->';\n    await regexFileAsync(\n      searchLine,\n      `<intent-filter>\n        <data android:scheme=\"${scheme}\"/>\n\n        <action android:name=\"android.intent.action.VIEW\"/>\n\n        <category android:name=\"android.intent.category.DEFAULT\"/>\n        <category android:name=\"android.intent.category.BROWSABLE\"/>\n      </intent-filter>`,\n      path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n    );\n  }\n\n  // Add permissions\n  if (manifest.android && manifest.android.permissions) {\n    const content = await fs.readFileSync(\n      path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml'),\n      'utf-8'\n    );\n\n    // Get the list of optional permissions form manifest\n    const permissions = content\n      .replace(\n        /(([\\s\\S]*<!-- BEGIN OPTIONAL PERMISSIONS -->)|(<!-- END OPTIONAL PERMISSIONS -->[\\s\\S]*))/g,\n        ''\n      )\n      .match(/android:name=\".+\"/g)\n      .map(p => p.replace(/(android:name=|\")/g, ''));\n\n    const whitelist = [];\n\n    manifest.android.permissions.forEach(s => {\n      if (s.includes('.')) {\n        whitelist.push(s);\n      } else {\n        permissions.forEach(identifier => {\n          if (identifier.split('.').pop() === s) {\n            whitelist.push(identifier);\n          }\n        });\n      }\n    });\n\n    // Permissions we need to remove from the generated manifest\n    const blacklist = [\n      'android.permission.ACCESS_COARSE_LOCATION',\n      'android.permission.ACCESS_FINE_LOCATION',\n      'android.permission.CAMERA',\n      'android.permission.MANAGE_DOCUMENTS',\n      'android.permission.READ_CONTACTS',\n      'android.permission.READ_CALENDAR',\n      'android.permission.WRITE_CALENDAR',\n      'android.permission.READ_EXTERNAL_STORAGE',\n      'android.permission.READ_INTERNAL_STORAGE',\n      'android.permission.READ_PHONE_STATE',\n      'android.permission.RECORD_AUDIO',\n      'android.permission.USE_FINGERPRINT',\n      'android.permission.VIBRATE',\n      'android.permission.WRITE_EXTERNAL_STORAGE',\n      'android.permission.READ_SMS',\n      'com.anddoes.launcher.permission.UPDATE_COUNT',\n      'com.android.launcher.permission.INSTALL_SHORTCUT',\n      'com.google.android.gms.permission.ACTIVITY_RECOGNITION',\n      'com.google.android.providers.gsf.permission.READ_GSERVICES',\n      'com.htc.launcher.permission.READ_SETTINGS',\n      'com.htc.launcher.permission.UPDATE_SHORTCUT',\n      'com.majeur.launcher.permission.UPDATE_BADGE',\n      'com.sec.android.provider.badge.permission.READ',\n      'com.sec.android.provider.badge.permission.WRITE',\n      'com.sonyericsson.home.permission.BROADCAST_BADGE',\n    ].filter(p => !whitelist.includes(p));\n\n    await deleteLinesInFileAsync(\n      `BEGIN\\ OPTIONAL\\ PERMISSIONS`,\n      `END\\ OPTIONAL\\ PERMISSIONS`,\n      path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n    );\n\n    await regexFileAsync(\n      '<!-- ADD PERMISSIONS HERE -->',\n      `\n      ${whitelist.map(p => `<uses-permission android:name=\"${p}\" />`).join('\\n')}\n      ${blacklist\n        .map(p => `<uses-permission android:name=\"${p}\" tools:node=\"remove\" />`)\n        .join('\\n')}\n      `,\n      path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n    );\n  }\n\n  // OAuth redirect scheme\n  await regexFileAsync(\n    '<data android:scheme=\"host.exp.exponent\" android:path=\"oauthredirect\"/>',\n    `<data android:scheme=\"${javaPackage}\" android:path=\"oauthredirect\"/>`,\n    path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n  );\n\n  // Embed manifest and bundle\n  if (isFullManifest) {\n    await fs.writeFileSync(\n      path.join(shellPath, 'app', 'src', 'main', 'assets', 'shell-app-manifest.json'),\n      JSON.stringify(manifest)\n    );\n    await saveUrlToPathAsync(\n      bundleUrl,\n      path.join(shellPath, 'app', 'src', 'main', 'assets', 'shell-app.bundle')\n    );\n\n    await regexFileAsync(\n      '// START EMBEDDED RESPONSES',\n      `\n      // START EMBEDDED RESPONSES\n      embeddedResponses.add(new Constants.EmbeddedResponse(\"${fullManifestUrl}\", \"assets://shell-app-manifest.json\", \"application/json\"));\n      embeddedResponses.add(new Constants.EmbeddedResponse(\"${bundleUrl}\", \"assets://shell-app.bundle\", \"application/javascript\"));`,\n      path.join(\n        shellPath,\n        'app',\n        'src',\n        'main',\n        'java',\n        'host',\n        'exp',\n        'exponent',\n        'generated',\n        'AppConstants.java'\n      )\n    );\n  }\n\n  await regexFileAsync(\n    'RELEASE_CHANNEL = \"default\"',\n    `RELEASE_CHANNEL = \"${releaseChannel}\"`,\n    path.join(\n      shellPath,\n      'app',\n      'src',\n      'main',\n      'java',\n      'host',\n      'exp',\n      'exponent',\n      'generated',\n      'AppConstants.java'\n    )\n  );\n\n  // Icons\n  createAndWriteIconsToPathAsync(\n    context,\n    path.join(shellPath, 'app', 'src', 'main', 'res'),\n    isDetached\n  );\n\n  // Splash Background\n  if (backgroundImages && backgroundImages.length > 0) {\n    // Delete the placeholder images\n    (await globby(['**/shell_launch_background_image.png'], {\n      cwd: path.join(shellPath, 'app', 'src', 'main', 'res'),\n      absolute: true,\n    })).forEach(filePath => {\n      fs.removeSync(filePath);\n    });\n\n    _.forEach(backgroundImages, async image => {\n      if (isDetached) {\n        // local file so just copy it\n        await fs.copy(image.url, image.path);\n      } else {\n        await saveUrlToPathAsync(image.url, image.path);\n      }\n    });\n  }\n\n  await AssetBundle.bundleAsync(manifest.bundledAssets, `${shellPath}/app/src/main/assets`);\n\n  let certificateHash = '';\n  let googleAndroidApiKey = '';\n  let privateConfig = context.data.privateConfig;\n  if (privateConfig) {\n    let branch = privateConfig.branch;\n    let fabric = privateConfig.fabric;\n    let googleMaps = privateConfig.googleMaps;\n    let googleSignIn = privateConfig.googleSignIn;\n\n    // Branch\n    if (branch) {\n      await regexFileAsync(\n        '<!-- ADD BRANCH CONFIG HERE -->',\n        `<meta-data\n      android:name=\"io.branch.sdk.BranchKey\"\n      android:value=\"${branch.apiKey}\"/>`,\n        path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n      );\n    }\n\n    // Fabric\n    if (fabric) {\n      await fs.remove(path.join(shellPath, 'app', 'fabric.properties'));\n      await fs.writeFileSync(\n        path.join(shellPath, 'app', 'fabric.properties'),\n        `apiSecret=${fabric.buildSecret}\\n`\n      );\n\n      await deleteLinesInFileAsync(\n        `BEGIN\\ FABRIC\\ CONFIG`,\n        `END\\ FABRIC\\ CONFIG`,\n        path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n      );\n      await regexFileAsync(\n        '<!-- ADD FABRIC CONFIG HERE -->',\n        `<meta-data\n      android:name=\"io.fabric.ApiKey\"\n      android:value=\"${fabric.apiKey}\"/>`,\n        path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n      );\n    }\n\n    // Google Maps\n    if (googleMaps) {\n      await deleteLinesInFileAsync(\n        `BEGIN\\ GOOGLE\\ MAPS\\ CONFIG`,\n        `END\\ GOOGLE\\ MAPS\\ CONFIG`,\n        path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n      );\n      await regexFileAsync(\n        '<!-- ADD GOOGLE MAPS CONFIG HERE -->',\n        `<meta-data\n      android:name=\"com.google.android.geo.API_KEY\"\n      android:value=\"${googleMaps.apiKey}\"/>`,\n        path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n      );\n    }\n\n    // Google Login\n    if (googleSignIn) {\n      certificateHash = googleSignIn.certificateHash;\n      googleAndroidApiKey = googleSignIn.apiKey;\n    }\n  }\n\n  if (manifest.android && manifest.android.googleServicesFile) {\n    // google-services.json\n    // Used for configuring FCM\n    let googleServicesFileContents = manifest.android.googleServicesFile;\n    if (isDetached) {\n      googleServicesFileContents = await fs.readFile(\n        path.resolve(shellPath, '..', manifest.android.googleServicesFile),\n        'utf8'\n      );\n    }\n    await fs.writeFile(\n      path.join(shellPath, 'app', 'google-services.json'),\n      googleServicesFileContents\n    );\n  } else {\n    await regexFileAsync(\n      'FCM_ENABLED = true',\n      'FCM_ENABLED = false',\n      path.join(\n        shellPath,\n        'app',\n        'src',\n        'main',\n        'java',\n        'host',\n        'exp',\n        'exponent',\n        'generated',\n        'AppConstants.java'\n      )\n    );\n  }\n\n  // Google sign in\n  await regexFileAsync(\n    /\"current_key\": \"(.*?)\"/,\n    `\"current_key\": \"${googleAndroidApiKey}\"`,\n    path.join(shellPath, 'app', 'google-services.json')\n  );\n  await regexFileAsync(\n    /\"certificate_hash\": \"(.*?)\"/,\n    `\"certificate_hash\": \"${certificateHash}\"`,\n    path.join(shellPath, 'app', 'google-services.json')\n  );\n}\n\nasync function buildShellAppAsync(context: StandaloneContext) {\n  let shellPath = shellPathForContext(context);\n\n  if (context.build.android) {\n    let androidBuildConfiguration = context.build.android;\n\n    try {\n      await fs.remove(`shell-unaligned.apk`);\n      await fs.remove(`shell.apk`);\n    } catch (e) {}\n    const gradleArgs = [`assembleProdMinSdkProdKernelRelease`];\n    if (process.env.GRADLE_DAEMON_DISABLED) {\n      gradleArgs.unshift('--no-daemon');\n    }\n    await spawnAsyncThrowError(`./gradlew`, gradleArgs, {\n      pipeToLogger: true,\n      loggerFields: { buildPhase: 'running gradle' },\n      cwd: shellPath,\n    });\n    await fs.copy(\n      path.join(\n        shellPath,\n        'app',\n        'build',\n        'outputs',\n        'apk',\n        'prodMinSdkProdKernel',\n        'release',\n        'app-prodMinSdk-prodKernel-release-unsigned.apk'\n      ),\n      `shell-unaligned.apk`\n    );\n    await spawnAsync(\n      `jarsigner`,\n      [\n        '-verbose',\n        '-sigalg',\n        'SHA1withRSA',\n        '-digestalg',\n        'SHA1',\n        '-storepass',\n        androidBuildConfiguration.keystorePassword,\n        '-keypass',\n        androidBuildConfiguration.keyPassword,\n        '-keystore',\n        androidBuildConfiguration.keystore,\n        'shell-unaligned.apk',\n        androidBuildConfiguration.keyAlias,\n      ],\n      {\n        pipeToLogger: true,\n        loggerFields: { buildPhase: 'signing created apk' },\n      }\n    );\n    await spawnAsync(`zipalign`, ['-v', '4', 'shell-unaligned.apk', 'shell.apk'], {\n      pipeToLogger: true,\n      loggerFields: { buildPhase: 'verifying apk alignment' },\n    });\n    try {\n      await fs.remove('shell-unaligned.apk');\n    } catch (e) {}\n    await spawnAsync(\n      `jarsigner`,\n      [\n        '-verify',\n        '-verbose',\n        '-certs',\n        '-keystore',\n        androidBuildConfiguration.keystore,\n        'shell.apk',\n      ],\n      {\n        pipeToLogger: true,\n        loggerFields: { buildPhase: 'verifying apk' },\n      }\n    );\n    await fs.copy('shell.apk', androidBuildConfiguration.outputFile || '/tmp/shell-signed.apk');\n  } else {\n    try {\n      await fs.remove('shell-debug.apk');\n    } catch (e) {}\n    await spawnAsyncThrowError(`./gradlew`, ['assembleDevMinSdkDevKernelDebug'], {\n      pipeToLogger: true,\n      loggerFields: { buildPhase: 'running gradle' },\n      cwd: shellPath,\n    });\n    await fs.copy(\n      path.join(\n        shellPath,\n        'app',\n        'build',\n        'outputs',\n        'apk',\n        'devMinSdkDevKernel',\n        'debug',\n        'app-devMinSdk-devKernel-debug.apk'\n      ),\n      `/tmp/shell-debug.apk`\n    );\n  }\n}\n\nexport function addDetachedConfigToExp(exp: Object, context: StandaloneContext): Object {\n  if (context.type !== 'user') {\n    console.warn(`Tried to modify exp for a non-user StandaloneContext, ignoring`);\n    return exp;\n  }\n  let shellPath = shellPathForContext(context);\n  let assetsDirectory = path.join(shellPath, 'app', 'src', 'main', 'assets');\n  exp.android.publishBundlePath = path.relative(\n    context.data.projectPath,\n    path.join(assetsDirectory, 'shell-app.bundle')\n  );\n  exp.android.publishManifestPath = path.relative(\n    context.data.projectPath,\n    path.join(assetsDirectory, 'shell-app-manifest.json')\n  );\n  return exp;\n}\n"],"sourceRoot":"/xdl@51.4.0/src"}